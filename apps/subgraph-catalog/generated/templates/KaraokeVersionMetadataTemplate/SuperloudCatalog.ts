// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import { ethereum, JSONValue, TypedMap, Entity, Bytes, Address, BigInt } from '@graphprotocol/graph-ts'

export class ListNewKaraokeVersion extends ethereum.Event {
  get params(): ListNewKaraokeVersion__Params {
    return new ListNewKaraokeVersion__Params(this)
  }
}

export class ListNewKaraokeVersion__Params {
  _event: ListNewKaraokeVersion

  constructor(event: ListNewKaraokeVersion) {
    this._event = event
  }

  get id_karaoke_version(): Bytes {
    return this._event.parameters[0].value.toBytes()
  }

  get created_at(): BigInt {
    return this._event.parameters[1].value.toBigInt()
  }

  get curator_address(): Address {
    return this._event.parameters[2].value.toAddress()
  }

  get id_original_version(): string {
    return this._event.parameters[3].value.toString()
  }

  get uri_metadata(): string {
    return this._event.parameters[4].value.toString()
  }

  get is_indexed(): boolean {
    return this._event.parameters[5].value.toBoolean()
  }
}

export class UpdateListedKaraokeVersion extends ethereum.Event {
  get params(): UpdateListedKaraokeVersion__Params {
    return new UpdateListedKaraokeVersion__Params(this)
  }
}

export class UpdateListedKaraokeVersion__Params {
  _event: UpdateListedKaraokeVersion

  constructor(event: UpdateListedKaraokeVersion) {
    this._event = event
  }

  get id_karaoke_version(): Bytes {
    return this._event.parameters[0].value.toBytes()
  }

  get uri_metadata(): string {
    return this._event.parameters[1].value.toString()
  }

  get is_indexed(): boolean {
    return this._event.parameters[2].value.toBoolean()
  }
}

export class SuperloudCatalog__id_karaoke_version_to_listed_songResult {
  value0: Bytes
  value1: BigInt
  value2: Address
  value3: string
  value4: string
  value5: boolean
  value6: boolean

  constructor(
    value0: Bytes,
    value1: BigInt,
    value2: Address,
    value3: string,
    value4: string,
    value5: boolean,
    value6: boolean,
  ) {
    this.value0 = value0
    this.value1 = value1
    this.value2 = value2
    this.value3 = value3
    this.value4 = value4
    this.value5 = value5
    this.value6 = value6
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>()
    map.set('value0', ethereum.Value.fromFixedBytes(this.value0))
    map.set('value1', ethereum.Value.fromUnsignedBigInt(this.value1))
    map.set('value2', ethereum.Value.fromAddress(this.value2))
    map.set('value3', ethereum.Value.fromString(this.value3))
    map.set('value4', ethereum.Value.fromString(this.value4))
    map.set('value5', ethereum.Value.fromBoolean(this.value5))
    map.set('value6', ethereum.Value.fromBoolean(this.value6))
    return map
  }

  getId_karaoke_version(): Bytes {
    return this.value0
  }

  getCreated_at(): BigInt {
    return this.value1
  }

  getCurator(): Address {
    return this.value2
  }

  getId_original_version(): string {
    return this.value3
  }

  getUri_metadata(): string {
    return this.value4
  }

  getIs_indexed(): boolean {
    return this.value5
  }

  getExists(): boolean {
    return this.value6
  }
}

export class SuperloudCatalog__getAllKaraokeVersionsResultValue0Struct extends ethereum.Tuple {
  get id_karaoke_version(): Bytes {
    return this[0].toBytes()
  }

  get created_at(): BigInt {
    return this[1].toBigInt()
  }

  get curator(): Address {
    return this[2].toAddress()
  }

  get id_original_version(): string {
    return this[3].toString()
  }

  get uri_metadata(): string {
    return this[4].toString()
  }

  get is_indexed(): boolean {
    return this[5].toBoolean()
  }

  get exists(): boolean {
    return this[6].toBoolean()
  }
}

export class SuperloudCatalog__getIndexedKaraokeVersionsResultValue0Struct extends ethereum.Tuple {
  get id_karaoke_version(): Bytes {
    return this[0].toBytes()
  }

  get created_at(): BigInt {
    return this[1].toBigInt()
  }

  get curator(): Address {
    return this[2].toAddress()
  }

  get id_original_version(): string {
    return this[3].toString()
  }

  get uri_metadata(): string {
    return this[4].toString()
  }

  get is_indexed(): boolean {
    return this[5].toBoolean()
  }

  get exists(): boolean {
    return this[6].toBoolean()
  }
}

export class SuperloudCatalog__getKaraokeVersionsByCuratorResultSongsStruct extends ethereum.Tuple {
  get id_karaoke_version(): Bytes {
    return this[0].toBytes()
  }

  get created_at(): BigInt {
    return this[1].toBigInt()
  }

  get curator(): Address {
    return this[2].toAddress()
  }

  get id_original_version(): string {
    return this[3].toString()
  }

  get uri_metadata(): string {
    return this[4].toString()
  }

  get is_indexed(): boolean {
    return this[5].toBoolean()
  }

  get exists(): boolean {
    return this[6].toBoolean()
  }
}

export class SuperloudCatalog__getKaraokeVersionsForOriginalVersionResultIndexed_karaoke_versionsStruct extends ethereum.Tuple {
  get id_karaoke_version(): Bytes {
    return this[0].toBytes()
  }

  get created_at(): BigInt {
    return this[1].toBigInt()
  }

  get curator(): Address {
    return this[2].toAddress()
  }

  get id_original_version(): string {
    return this[3].toString()
  }

  get uri_metadata(): string {
    return this[4].toString()
  }

  get is_indexed(): boolean {
    return this[5].toBoolean()
  }

  get exists(): boolean {
    return this[6].toBoolean()
  }
}

export class SuperloudCatalog__getKaraokeVersionByIdResult {
  value0: Bytes
  value1: BigInt
  value2: Address
  value3: string
  value4: boolean

  constructor(value0: Bytes, value1: BigInt, value2: Address, value3: string, value4: boolean) {
    this.value0 = value0
    this.value1 = value1
    this.value2 = value2
    this.value3 = value3
    this.value4 = value4
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>()
    map.set('value0', ethereum.Value.fromFixedBytes(this.value0))
    map.set('value1', ethereum.Value.fromUnsignedBigInt(this.value1))
    map.set('value2', ethereum.Value.fromAddress(this.value2))
    map.set('value3', ethereum.Value.fromString(this.value3))
    map.set('value4', ethereum.Value.fromBoolean(this.value4))
    return map
  }

  getId_karaoke_version(): Bytes {
    return this.value0
  }

  getCreated_at(): BigInt {
    return this.value1
  }

  getCurator(): Address {
    return this.value2
  }

  getUri_metadata(): string {
    return this.value3
  }

  getIs_indexed(): boolean {
    return this.value4
  }
}

export class SuperloudCatalog extends ethereum.SmartContract {
  static bind(address: Address): SuperloudCatalog {
    return new SuperloudCatalog('SuperloudCatalog', address)
  }

  curator_address_to_songs(param0: Address, param1: BigInt): Bytes {
    let result = super.call('curator_address_to_songs', 'curator_address_to_songs(address,uint256):(bytes32)', [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromUnsignedBigInt(param1),
    ])

    return result[0].toBytes()
  }

  try_curator_address_to_songs(param0: Address, param1: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall('curator_address_to_songs', 'curator_address_to_songs(address,uint256):(bytes32)', [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromUnsignedBigInt(param1),
    ])
    if (result.reverted) {
      return new ethereum.CallResult()
    }
    let value = result.value
    return ethereum.CallResult.fromValue(value[0].toBytes())
  }

  id_karaoke_version_to_listed_song(param0: Bytes): SuperloudCatalog__id_karaoke_version_to_listed_songResult {
    let result = super.call(
      'id_karaoke_version_to_listed_song',
      'id_karaoke_version_to_listed_song(bytes32):(bytes32,uint256,address,string,string,bool,bool)',
      [ethereum.Value.fromFixedBytes(param0)],
    )

    return new SuperloudCatalog__id_karaoke_version_to_listed_songResult(
      result[0].toBytes(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toString(),
      result[4].toString(),
      result[5].toBoolean(),
      result[6].toBoolean(),
    )
  }

  try_id_karaoke_version_to_listed_song(
    param0: Bytes,
  ): ethereum.CallResult<SuperloudCatalog__id_karaoke_version_to_listed_songResult> {
    let result = super.tryCall(
      'id_karaoke_version_to_listed_song',
      'id_karaoke_version_to_listed_song(bytes32):(bytes32,uint256,address,string,string,bool,bool)',
      [ethereum.Value.fromFixedBytes(param0)],
    )
    if (result.reverted) {
      return new ethereum.CallResult()
    }
    let value = result.value
    return ethereum.CallResult.fromValue(
      new SuperloudCatalog__id_karaoke_version_to_listed_songResult(
        value[0].toBytes(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toString(),
        value[4].toString(),
        value[5].toBoolean(),
        value[6].toBoolean(),
      ),
    )
  }

  id_original_version_to_karaoke_versions(param0: string, param1: BigInt): Bytes {
    let result = super.call(
      'id_original_version_to_karaoke_versions',
      'id_original_version_to_karaoke_versions(string,uint256):(bytes32)',
      [ethereum.Value.fromString(param0), ethereum.Value.fromUnsignedBigInt(param1)],
    )

    return result[0].toBytes()
  }

  try_id_original_version_to_karaoke_versions(param0: string, param1: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      'id_original_version_to_karaoke_versions',
      'id_original_version_to_karaoke_versions(string,uint256):(bytes32)',
      [ethereum.Value.fromString(param0), ethereum.Value.fromUnsignedBigInt(param1)],
    )
    if (result.reverted) {
      return new ethereum.CallResult()
    }
    let value = result.value
    return ethereum.CallResult.fromValue(value[0].toBytes())
  }

  owner(): Address {
    let result = super.call('owner', 'owner():(address)', [])

    return result[0].toAddress()
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall('owner', 'owner():(address)', [])
    if (result.reverted) {
      return new ethereum.CallResult()
    }
    let value = result.value
    return ethereum.CallResult.fromValue(value[0].toAddress())
  }

  getAllKaraokeVersions(): Array<SuperloudCatalog__getAllKaraokeVersionsResultValue0Struct> {
    let result = super.call(
      'getAllKaraokeVersions',
      'getAllKaraokeVersions():((bytes32,uint256,address,string,string,bool,bool)[])',
      [],
    )

    return result[0].toTupleArray<SuperloudCatalog__getAllKaraokeVersionsResultValue0Struct>()
  }

  try_getAllKaraokeVersions(): ethereum.CallResult<Array<SuperloudCatalog__getAllKaraokeVersionsResultValue0Struct>> {
    let result = super.tryCall(
      'getAllKaraokeVersions',
      'getAllKaraokeVersions():((bytes32,uint256,address,string,string,bool,bool)[])',
      [],
    )
    if (result.reverted) {
      return new ethereum.CallResult()
    }
    let value = result.value
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<SuperloudCatalog__getAllKaraokeVersionsResultValue0Struct>(),
    )
  }

  getIndexedKaraokeVersions(): Array<SuperloudCatalog__getIndexedKaraokeVersionsResultValue0Struct> {
    let result = super.call(
      'getIndexedKaraokeVersions',
      'getIndexedKaraokeVersions():((bytes32,uint256,address,string,string,bool,bool)[])',
      [],
    )

    return result[0].toTupleArray<SuperloudCatalog__getIndexedKaraokeVersionsResultValue0Struct>()
  }

  try_getIndexedKaraokeVersions(): ethereum.CallResult<
    Array<SuperloudCatalog__getIndexedKaraokeVersionsResultValue0Struct>
  > {
    let result = super.tryCall(
      'getIndexedKaraokeVersions',
      'getIndexedKaraokeVersions():((bytes32,uint256,address,string,string,bool,bool)[])',
      [],
    )
    if (result.reverted) {
      return new ethereum.CallResult()
    }
    let value = result.value
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<SuperloudCatalog__getIndexedKaraokeVersionsResultValue0Struct>(),
    )
  }

  getKaraokeVersionsByCurator(curator: Address): Array<SuperloudCatalog__getKaraokeVersionsByCuratorResultSongsStruct> {
    let result = super.call(
      'getKaraokeVersionsByCurator',
      'getKaraokeVersionsByCurator(address):((bytes32,uint256,address,string,string,bool,bool)[])',
      [ethereum.Value.fromAddress(curator)],
    )

    return result[0].toTupleArray<SuperloudCatalog__getKaraokeVersionsByCuratorResultSongsStruct>()
  }

  try_getKaraokeVersionsByCurator(
    curator: Address,
  ): ethereum.CallResult<Array<SuperloudCatalog__getKaraokeVersionsByCuratorResultSongsStruct>> {
    let result = super.tryCall(
      'getKaraokeVersionsByCurator',
      'getKaraokeVersionsByCurator(address):((bytes32,uint256,address,string,string,bool,bool)[])',
      [ethereum.Value.fromAddress(curator)],
    )
    if (result.reverted) {
      return new ethereum.CallResult()
    }
    let value = result.value
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<SuperloudCatalog__getKaraokeVersionsByCuratorResultSongsStruct>(),
    )
  }

  getKaraokeVersionsForOriginalVersion(
    id_original_version: string,
  ): Array<SuperloudCatalog__getKaraokeVersionsForOriginalVersionResultIndexed_karaoke_versionsStruct> {
    let result = super.call(
      'getKaraokeVersionsForOriginalVersion',
      'getKaraokeVersionsForOriginalVersion(string):((bytes32,uint256,address,string,string,bool,bool)[])',
      [ethereum.Value.fromString(id_original_version)],
    )

    return result[0].toTupleArray<SuperloudCatalog__getKaraokeVersionsForOriginalVersionResultIndexed_karaoke_versionsStruct>()
  }

  try_getKaraokeVersionsForOriginalVersion(
    id_original_version: string,
  ): ethereum.CallResult<
    Array<SuperloudCatalog__getKaraokeVersionsForOriginalVersionResultIndexed_karaoke_versionsStruct>
  > {
    let result = super.tryCall(
      'getKaraokeVersionsForOriginalVersion',
      'getKaraokeVersionsForOriginalVersion(string):((bytes32,uint256,address,string,string,bool,bool)[])',
      [ethereum.Value.fromString(id_original_version)],
    )
    if (result.reverted) {
      return new ethereum.CallResult()
    }
    let value = result.value
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<SuperloudCatalog__getKaraokeVersionsForOriginalVersionResultIndexed_karaoke_versionsStruct>(),
    )
  }

  getKaraokeVersionById(id: Bytes): SuperloudCatalog__getKaraokeVersionByIdResult {
    let result = super.call(
      'getKaraokeVersionById',
      'getKaraokeVersionById(bytes32):(bytes32,uint256,address,string,bool)',
      [ethereum.Value.fromFixedBytes(id)],
    )

    return new SuperloudCatalog__getKaraokeVersionByIdResult(
      result[0].toBytes(),
      result[1].toBigInt(),
      result[2].toAddress(),
      result[3].toString(),
      result[4].toBoolean(),
    )
  }

  try_getKaraokeVersionById(id: Bytes): ethereum.CallResult<SuperloudCatalog__getKaraokeVersionByIdResult> {
    let result = super.tryCall(
      'getKaraokeVersionById',
      'getKaraokeVersionById(bytes32):(bytes32,uint256,address,string,bool)',
      [ethereum.Value.fromFixedBytes(id)],
    )
    if (result.reverted) {
      return new ethereum.CallResult()
    }
    let value = result.value
    return ethereum.CallResult.fromValue(
      new SuperloudCatalog__getKaraokeVersionByIdResult(
        value[0].toBytes(),
        value[1].toBigInt(),
        value[2].toAddress(),
        value[3].toString(),
        value[4].toBoolean(),
      ),
    )
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this)
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this)
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall

  constructor(call: ConstructorCall) {
    this._call = call
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall

  constructor(call: ConstructorCall) {
    this._call = call
  }
}

export class ListNewKaraokeVersionCall extends ethereum.Call {
  get inputs(): ListNewKaraokeVersionCall__Inputs {
    return new ListNewKaraokeVersionCall__Inputs(this)
  }

  get outputs(): ListNewKaraokeVersionCall__Outputs {
    return new ListNewKaraokeVersionCall__Outputs(this)
  }
}

export class ListNewKaraokeVersionCall__Inputs {
  _call: ListNewKaraokeVersionCall

  constructor(call: ListNewKaraokeVersionCall) {
    this._call = call
  }

  get id_original_version(): string {
    return this._call.inputValues[0].value.toString()
  }

  get uri_metadata(): string {
    return this._call.inputValues[1].value.toString()
  }

  get created_at(): BigInt {
    return this._call.inputValues[2].value.toBigInt()
  }
}

export class ListNewKaraokeVersionCall__Outputs {
  _call: ListNewKaraokeVersionCall

  constructor(call: ListNewKaraokeVersionCall) {
    this._call = call
  }
}

export class UpdateKaraokeVersionCall extends ethereum.Call {
  get inputs(): UpdateKaraokeVersionCall__Inputs {
    return new UpdateKaraokeVersionCall__Inputs(this)
  }

  get outputs(): UpdateKaraokeVersionCall__Outputs {
    return new UpdateKaraokeVersionCall__Outputs(this)
  }
}

export class UpdateKaraokeVersionCall__Inputs {
  _call: UpdateKaraokeVersionCall

  constructor(call: UpdateKaraokeVersionCall) {
    this._call = call
  }

  get id_karaoke_version(): Bytes {
    return this._call.inputValues[0].value.toBytes()
  }

  get is_indexed(): boolean {
    return this._call.inputValues[1].value.toBoolean()
  }

  get uri_metadata_updated(): string {
    return this._call.inputValues[2].value.toString()
  }
}

export class UpdateKaraokeVersionCall__Outputs {
  _call: UpdateKaraokeVersionCall

  constructor(call: UpdateKaraokeVersionCall) {
    this._call = call
  }
}
